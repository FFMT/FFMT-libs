buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

ext.buildnumber = 0

version = "1.6.3"
group= "fr.minecraftforgefrance"
archivesBaseName = "FFMT-libs"

if (System.getenv().BUILD_NUMBER) {
    project.buildnumber = System.getenv().BUILD_NUMBER
	version += "." + System.getenv().BUILD_NUMBER
}
else {
    logger.lifecycle "SETTING BUILDNUMBER TO 0"
}

minecraft {
    version = "1.9-12.16.0.1770-1.9"
    runDir = "run"

    mappings = "snapshot_20160102"

    replace "@VERSION@", project.version
    replaceIn "FFMTLibs.java"
    makeObfSourceJar = false
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'resources'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    appendix = 'universal'
    version = "${project.version}-mc${project.minecraft.version}"
}

task devJar(type: Jar) {
    from(sourceSets.main.allSource) {
        include 'fr/**/**'
    }
    from(sourceSets.main.output) {
        include '**'
    }
    classifier = 'dev'
    version = "${project.version}-mc${project.minecraft.version}"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
    version = "${project.version}-mc${project.minecraft.version}"
}

build.dependsOn devJar, javadocJar

artifacts {
    archives devJar
    archives javadocJar
}

configurations {
    deployerJars
}

repositories {
    maven {
        name = "mff"
        url = "http://files.minecraftforgefrance.fr/maven/"
    }
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        if (project.hasProperty('url')) {
            version = "${project.version}-mc${project.minecraft.version}"
            logger.info("Publishing to files server")
        	repository(url: url) {
            	authentication(userName: user, password: password)
                addFilter('dev') { 
                    artifact, file ->
                    file == devJar.archivePath
                }
            }
        }
        else {
            logger.info('Publishing to repo folder')
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }
    }
}